{"failedCount":0,"prefixedPath":"classpath:com\/intuit\/karate\/junit4\/demos\/schema-like.feature","packageQualifiedName":"com.intuit.karate.junit4.demos.schema-like","loopIndex":-1,"relativePath":"com\/intuit\/karate\/junit4\/demos\/schema-like.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":2503000,"millis":2.503,"status":"passed"},"step":{"line":5,"prefix":"*","index":0,"text":"def response = read('odds.json')"},"callResults":[{"failedCount":0,"prefixedPath":"classpath:utils.feature","packageQualifiedName":"utils","loopIndex":-1,"relativePath":"utils.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":114400,"millis":0.1144,"status":"passed"},"hidden":true,"step":{"line":5,"prefix":"*","index":0,"text":"def hello = function(){ return 'hello world' }"}}],"line":4,"description":"","durationMillis":0.1144,"failed":false,"tags":["report=false","ignore"],"executorName":"pool-1-thread-4","name":"","startTime":1668550327896,"refId":"[1:4]","endTime":1668550327896,"exampleIndex":-1}],"callDepth":1,"name":"","description":"","resultDate":"2022-11-15 07:12:09 PM","durationMillis":0.1144,"passedCount":1}]},{"result":{"nanos":821800,"millis":0.8218,"status":"passed"},"step":{"comments":["# here we enclose in round-brackets to preserve the optional embedded expression","# so that it can be used later in a \"match\""],"line":8,"prefix":"*","index":1,"text":"def oddSchema = ({ price: '#string', status: '#? _ < 3', ck: '##number', name: '#regex[0-9X]' })"}},{"result":{"nanos":28017100,"millis":28.0171,"status":"passed"},"step":{"line":9,"prefix":"*","index":2,"text":"def isValidTime = read('time-validator.js')"}},{"result":{"nanos":24966000,"millis":24.966,"status":"passed"},"step":{"endLine":27,"line":11,"prefix":"Then","docString":"{ \n  id: '#regex[0-9]+',\n  count: '#number',\n  odd: '#(oddSchema)',\n  data: { \n    countryId: '#number', \n    countryName: '#string', \n    leagueName: '##string', \n    status: '#number? _ >= 0', \n    sportName: '#string',\n    time: '#? isValidTime(_)'\n  },\n  odds: '#[] oddSchema'  \n}","index":3,"text":"match response =="}},{"result":{"nanos":474000,"millis":0.474,"status":"passed"},"step":{"comments":["# other examples","# should be an array"],"line":31,"prefix":"*","index":4,"text":"match $.odds == '#[]'"}},{"result":{"nanos":782700,"millis":0.7827,"status":"passed"},"step":{"comments":["# should be an array of size 4"],"line":34,"prefix":"*","index":5,"text":"match $.odds == '#[4]'"}},{"result":{"nanos":763200,"millis":0.7632,"status":"passed"},"step":{"comments":["# optionally present (or null) and should be an array of size greater than zero"],"line":37,"prefix":"*","index":6,"text":"match $.odds == '##[_ > 0]'"}},{"result":{"nanos":1929500,"millis":1.9295,"status":"passed"},"step":{"comments":["# should be an array of size equal to $.count"],"line":40,"prefix":"*","index":7,"text":"match $ contains { odds: '#[$.count]' }"}},{"result":{"nanos":1420600,"millis":1.4206,"status":"passed"},"step":{"comments":["# use a predicate function to validate each array element"],"line":43,"prefix":"*","index":8,"text":"def isValidOdd = function(o){ return o.name.length == 1 }"}},{"result":{"nanos":17672400,"millis":17.6724,"status":"passed"},"step":{"line":44,"prefix":"*","index":9,"text":"match $.odds == '#[]? isValidOdd(_)'"}},{"result":{"nanos":466900,"millis":0.4669,"status":"passed"},"step":{"comments":["# for simple arrays, types can be 'in-line'"],"line":47,"prefix":"*","index":10,"text":"def foo = ['bar', 'baz']"}},{"result":{"nanos":188300,"millis":0.1883,"status":"passed"},"step":{"comments":["# should be an array"],"line":50,"prefix":"*","index":11,"text":"match foo == '#[]'"}},{"result":{"nanos":1015400,"millis":1.0154,"status":"passed"},"step":{"comments":["# should be an array of size 2"],"line":53,"prefix":"*","index":12,"text":"match foo == '#[2]'"}},{"result":{"nanos":891900,"millis":0.8919,"status":"passed"},"step":{"comments":["# should be an array of strings with size 2"],"line":56,"prefix":"*","index":13,"text":"match foo == '#[2] #string'"}},{"result":{"nanos":1610400,"millis":1.6104,"status":"passed"},"step":{"comments":["# each item of the array should be of length 3"],"line":59,"prefix":"*","index":14,"text":"match foo == '#[]? _.length == 3'"}},{"result":{"nanos":1129300,"millis":1.1293,"status":"passed"},"step":{"comments":["# should be an array of strings each of length 3"],"line":62,"prefix":"*","index":15,"text":"match foo == '#[] #string? _.length == 3'"}},{"result":{"nanos":955700,"millis":0.9557,"status":"passed"},"step":{"comments":["# should be null or an array of strings"],"line":65,"prefix":"*","index":16,"text":"match foo == '##[] #string'"}},{"result":{"nanos":617500,"millis":0.6175,"status":"passed"},"step":{"comments":["# each item of the array should match regex (with backslash involved)"],"line":68,"prefix":"*","index":17,"text":"match foo == '#[] #regex \\\\w+'"}},{"result":{"nanos":87400,"millis":0.0874,"status":"passed"},"step":{"comments":["# contains"],"line":71,"prefix":"*","index":18,"text":"def actual = [{ a: 1, b: 'x' }, { a: 2, b: 'y' }]"}},{"result":{"nanos":60600,"millis":0.0606,"status":"passed"},"step":{"line":73,"prefix":"*","index":19,"text":"def schema = { a: '#number', b: '#string' }"}},{"result":{"nanos":59000,"millis":0.059,"status":"passed"},"step":{"line":74,"prefix":"*","index":20,"text":"def partSchema = { a: '#number' }"}},{"result":{"nanos":54900,"millis":0.0549,"status":"passed"},"step":{"line":75,"prefix":"*","index":21,"text":"def badSchema = { c: '#boolean' }"}},{"result":{"nanos":40700,"millis":0.0407,"status":"passed"},"step":{"line":76,"prefix":"*","index":22,"text":"def mixSchema = { a: '#number', c: '#boolean' }"}},{"result":{"nanos":54400,"millis":0.0544,"status":"passed"},"step":{"line":78,"prefix":"*","index":23,"text":"def shuffled = [{ a: 2, b: 'y' }, { b: 'x', a: 1 }]"}},{"result":{"nanos":49000,"millis":0.049,"status":"passed"},"step":{"line":79,"prefix":"*","index":24,"text":"def first = { a: 1, b: 'x' }"}},{"result":{"nanos":45300,"millis":0.0453,"status":"passed"},"step":{"line":80,"prefix":"*","index":25,"text":"def part = { a: 1 }"}},{"result":{"nanos":39100,"millis":0.0391,"status":"passed"},"step":{"line":81,"prefix":"*","index":26,"text":"def mix = { b: 'y', c: true }"}},{"result":{"nanos":57400,"millis":0.0574,"status":"passed"},"step":{"line":82,"prefix":"*","index":27,"text":"def other = [{ a: 3, b: 'u' }, { a: 4, b: 'v' }]"}},{"result":{"nanos":55100,"millis":0.0551,"status":"passed"},"step":{"line":83,"prefix":"*","index":28,"text":"def some = [{ a: 1, b: 'x' }, { a: 5, b: 'w' }]"}},{"result":{"nanos":253000,"millis":0.253,"status":"passed"},"step":{"line":85,"prefix":"*","index":29,"text":"match actual[0] == schema"}},{"result":{"nanos":929600,"millis":0.9296,"status":"passed"},"step":{"line":86,"prefix":"*","index":30,"text":"match actual[0] == '#(schema)'"}},{"result":{"nanos":175800,"millis":0.1758,"status":"passed"},"step":{"line":88,"prefix":"*","index":31,"text":"match actual[0] contains partSchema"}},{"result":{"nanos":862100,"millis":0.8621,"status":"passed"},"step":{"line":89,"prefix":"*","index":32,"text":"match actual[0] == '#(^partSchema)'"}},{"result":{"nanos":154900,"millis":0.1549,"status":"passed"},"step":{"line":91,"prefix":"*","index":33,"text":"match actual[0] contains any mixSchema"}},{"result":{"nanos":675600,"millis":0.6756,"status":"passed"},"step":{"line":92,"prefix":"*","index":34,"text":"match actual[0] == '#(^*mixSchema)'"}},{"result":{"nanos":122400,"millis":0.1224,"status":"passed"},"step":{"line":94,"prefix":"*","index":35,"text":"match actual[0] !contains badSchema"}},{"result":{"nanos":778100,"millis":0.7781,"status":"passed"},"step":{"line":95,"prefix":"*","index":36,"text":"match actual[0] == '#(!^badSchema)'"}},{"result":{"nanos":358700,"millis":0.3587,"status":"passed"},"step":{"line":97,"prefix":"*","index":37,"text":"match each actual == schema"}},{"result":{"nanos":616700,"millis":0.6167,"status":"passed"},"step":{"line":98,"prefix":"*","index":38,"text":"match actual == '#[] schema'"}},{"result":{"nanos":403000,"millis":0.403,"status":"passed"},"step":{"line":100,"prefix":"*","index":39,"text":"match each actual contains partSchema"}},{"result":{"nanos":965000,"millis":0.965,"status":"passed"},"step":{"line":101,"prefix":"*","index":40,"text":"match actual == '#[] ^partSchema'"}},{"result":{"nanos":507300,"millis":0.5073,"status":"passed"},"step":{"line":103,"prefix":"*","index":41,"text":"match each actual contains any mixSchema"}},{"result":{"nanos":2083100,"millis":2.0831,"status":"passed"},"step":{"line":104,"prefix":"*","index":42,"text":"match actual == '#[] ^*mixSchema'"}},{"result":{"nanos":361000,"millis":0.361,"status":"passed"},"step":{"line":106,"prefix":"*","index":43,"text":"match each actual !contains badSchema"}},{"result":{"nanos":695500,"millis":0.6955,"status":"passed"},"step":{"line":107,"prefix":"*","index":44,"text":"match actual == '#[] !^badSchema'"}},{"result":{"nanos":145300,"millis":0.1453,"status":"passed"},"step":{"line":109,"prefix":"*","index":45,"text":"match actual contains only shuffled"}},{"result":{"nanos":800700,"millis":0.8007,"status":"passed"},"step":{"line":110,"prefix":"*","index":46,"text":"match actual == '#(^^shuffled)'"}},{"result":{"nanos":86000,"millis":0.086,"status":"passed"},"step":{"line":112,"prefix":"*","index":47,"text":"match actual contains first"}},{"result":{"nanos":614800,"millis":0.6148,"status":"passed"},"step":{"line":113,"prefix":"*","index":48,"text":"match actual == '#(^first)'"}},{"result":{"nanos":89400,"millis":0.0894,"status":"passed"},"step":{"line":115,"prefix":"*","index":49,"text":"match actual contains any some"}},{"result":{"nanos":570700,"millis":0.5707,"status":"passed"},"step":{"line":116,"prefix":"*","index":50,"text":"match actual == '#(^*some)'"}},{"result":{"nanos":103000,"millis":0.103,"status":"passed"},"step":{"line":118,"prefix":"*","index":51,"text":"match actual !contains other"}},{"result":{"nanos":561300,"millis":0.5613,"status":"passed"},"step":{"line":119,"prefix":"*","index":52,"text":"match actual == '#(!^other)'"}},{"result":{"nanos":95300,"millis":0.0953,"status":"passed"},"step":{"line":121,"prefix":"*","index":53,"text":"match actual contains deep part"}},{"result":{"nanos":539300,"millis":0.5393,"status":"passed"},"step":{"line":122,"prefix":"*","index":54,"text":"match actual == '#(^+part)'"}},{"result":{"nanos":400500,"millis":0.4005,"status":"passed"},"step":{"comments":["# no in-line equivalent !"],"line":125,"prefix":"*","index":55,"text":"match actual contains '#(^part)'"}},{"result":{"nanos":778100,"millis":0.7781,"status":"passed"},"step":{"comments":["# no in-line equivalent !"],"line":128,"prefix":"*","index":56,"text":"match actual contains '#(^*mix)'"}},{"result":{"nanos":532000,"millis":0.532,"status":"passed"},"step":{"line":130,"prefix":"*","index":57,"text":"assert actual.length == 2"}},{"result":{"nanos":448100,"millis":0.4481,"status":"passed"},"step":{"line":131,"prefix":"*","index":58,"text":"match actual == '#[2]'"}},{"result":{"nanos":114700,"millis":0.1147,"status":"passed"},"step":{"comments":["# contains deep"],"line":134,"prefix":"*","index":59,"text":"def actualDeep = [{ a: [1, 2], b: 'x' }, { a: [3, 4], b: 'y' }]"}},{"result":{"nanos":89100,"millis":0.0891,"status":"passed"},"step":{"line":136,"prefix":"*","index":60,"text":"def partDeep = { a: [1] }"}},{"result":{"nanos":139200,"millis":0.1392,"status":"passed"},"step":{"line":137,"prefix":"*","index":61,"text":"match actual contains deep part"}}],"executorName":"pool-1-thread-4","line":3,"name":"but simpler and more powerful","description":"","durationMillis":102.8779,"startTime":1668550327880,"failed":false,"refId":"[1:3]","endTime":1668550328005,"exampleIndex":-1},{"sectionIndex":1,"stepResults":[{"result":{"nanos":242300,"millis":0.2423,"status":"passed"},"step":{"endLine":152,"line":140,"prefix":"*","docString":"{\n  \"foo\": {\n    \"bars\": [\n      { \"barOne\": \"dc\", \"barTwos\": [] },\n      { \"barOne\": \"dc\", \"barTwos\": [{ title: 'blah' }] },\n      { \"barOne\": \"dc\", \"barTwos\": [{ title: 'blah' }], barThrees: [] },\n      { \"barOne\": \"dc\", \"barTwos\": [{ title: 'blah' }], barThrees: [{ num: 1 }] }\n    ]\n  }\n}","index":0,"text":"def json ="},"callResults":[{"failedCount":0,"prefixedPath":"classpath:utils.feature","packageQualifiedName":"utils","loopIndex":-1,"relativePath":"utils.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":394600,"millis":0.3946,"status":"passed"},"hidden":true,"step":{"line":5,"prefix":"*","index":0,"text":"def hello = function(){ return 'hello world' }"}}],"line":4,"description":"","durationMillis":0.3946,"failed":false,"tags":["report=false","ignore"],"executorName":"pool-1-thread-1","name":"","startTime":1668550327924,"refId":"[1:4]","endTime":1668550327924,"exampleIndex":-1}],"callDepth":1,"name":"","description":"","resultDate":"2022-11-15 07:12:09 PM","durationMillis":0.3946,"passedCount":1}]},{"result":{"nanos":68700,"millis":0.0687,"status":"passed"},"step":{"line":153,"prefix":"*","index":1,"text":"def barTwo = { title: '#string' }"}},{"result":{"nanos":82100,"millis":0.0821,"status":"passed"},"step":{"line":154,"prefix":"*","index":2,"text":"def barThree = { num: '#number' }"}},{"result":{"nanos":102900,"millis":0.1029,"status":"passed"},"step":{"line":155,"prefix":"*","index":3,"text":"def bar = { barOne: '#string', barTwos: '#[] barTwo', barThrees: '##[] barThree' }"}},{"result":{"nanos":6530800,"millis":6.5308,"status":"passed"},"step":{"line":156,"prefix":"*","index":4,"text":"match json.foo.bars == '#[] bar'"}}],"executorName":"pool-1-thread-1","line":139,"name":"complex nested arrays","description":"","durationMillis":7.0268,"startTime":1668550327884,"failed":false,"refId":"[2:139]","endTime":1668550327935,"exampleIndex":-1},{"sectionIndex":2,"stepResults":[{"result":{"nanos":112800,"millis":0.1128,"status":"passed"},"step":{"line":159,"prefix":"*","index":0,"text":"def dogSchema = { id: '#string', color: '#string' }"},"callResults":[{"failedCount":0,"prefixedPath":"classpath:utils.feature","packageQualifiedName":"utils","loopIndex":-1,"relativePath":"utils.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":105300,"millis":0.1053,"status":"passed"},"hidden":true,"step":{"line":5,"prefix":"*","index":0,"text":"def hello = function(){ return 'hello world' }"}}],"line":4,"description":"","durationMillis":0.1053,"failed":false,"tags":["report=false","ignore"],"executorName":"pool-1-thread-3","name":"","startTime":1668550327901,"refId":"[1:4]","endTime":1668550327901,"exampleIndex":-1}],"callDepth":1,"name":"","description":"","resultDate":"2022-11-15 07:12:09 PM","durationMillis":0.1053,"passedCount":1}]},{"result":{"nanos":470700,"millis":0.4707,"status":"passed"},"step":{"comments":["# here we enclose in round-brackets to preserve the optional embedded expression","# so that it can be used later in a \"match\""],"line":162,"prefix":"*","index":1,"text":"def schema = ({ id: '#string', name: '#string', dog: '##(dogSchema)' })"}},{"result":{"nanos":56300,"millis":0.0563,"status":"passed"},"step":{"line":164,"prefix":"*","index":2,"text":"def response1 = { id: '123', name: 'foo' }"}},{"result":{"nanos":116400,"millis":0.1164,"status":"passed"},"step":{"line":165,"prefix":"*","index":3,"text":"match response1 == schema"}},{"result":{"nanos":55100,"millis":0.0551,"status":"passed"},"step":{"line":167,"prefix":"*","index":4,"text":"def response2 = { id: '123', name: 'foo', dog: { id: '456', color: 'brown' } }"}},{"result":{"nanos":736000,"millis":0.736,"status":"passed"},"step":{"line":168,"prefix":"*","index":5,"text":"match response2 == schema"}}],"executorName":"pool-1-thread-3","line":158,"name":"re-usable json chunks as nodes, but optional","description":"","durationMillis":1.5473,"startTime":1668550327896,"failed":false,"refId":"[3:158]","endTime":1668550327905,"exampleIndex":-1},{"sectionIndex":3,"stepResults":[{"result":{"nanos":847200,"millis":0.8472,"status":"passed"},"step":{"line":171,"prefix":"*","index":0,"text":"def json = read('odds.json')"},"callResults":[{"failedCount":0,"prefixedPath":"classpath:utils.feature","packageQualifiedName":"utils","loopIndex":-1,"relativePath":"utils.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":95200,"millis":0.0952,"status":"passed"},"hidden":true,"step":{"line":5,"prefix":"*","index":0,"text":"def hello = function(){ return 'hello world' }"}}],"line":4,"description":"","durationMillis":0.0952,"failed":false,"tags":["report=false","ignore"],"executorName":"pool-1-thread-3","name":"","startTime":1668550327968,"refId":"[1:4]","endTime":1668550327968,"exampleIndex":-1}],"callDepth":1,"name":"","description":"","resultDate":"2022-11-15 07:12:09 PM","durationMillis":0.0952,"passedCount":1}]},{"result":{"nanos":2212500,"millis":2.2125,"status":"passed"},"step":{"line":172,"prefix":"*","index":1,"text":"print 'pretty print:\\n' + karate.pretty(json)"},"stepLog":"19:12:07.972 [print] pretty print:\n{\n  \"id\": \"390\",\n  \"count\": 4,\n  \"odd\": {\n    \"price\": \"1.20\",\n    \"status\": 2,\n    \"ck\": 12.2,\n    \"name\": \"2\"\n  },\n  \"data\": {\n    \"countryId\": 35,\n    \"countryName\": \"Norway\",\n    \"status\": 0,\n    \"sportName\": \"Soccer\",\n    \"time\": \"2016-06-12T12:00:00Z\"\n  },\n  \"odds\": [\n    {\n      \"price\": \"1.30\",\n      \"status\": 0,\n      \"ck\": 12.2,\n      \"name\": \"1\"\n    },\n    {\n      \"price\": \"5.25\",\n      \"status\": 1,\n      \"name\": \"X\"\n    },\n    {\n      \"price\": \"2.70\",\n      \"status\": 0,\n      \"ck\": 12.2,\n      \"name\": \"0\"\n    },\n    {\n      \"price\": \"1.20\",\n      \"status\": 2,\n      \"name\": \"2\"\n    }\n  ]\n}\n \n"}],"executorName":"pool-1-thread-3","line":170,"name":"pretty print json","description":"","durationMillis":3.0597,"startTime":1668550327925,"failed":false,"refId":"[4:170]","endTime":1668550327972,"exampleIndex":-1},{"sectionIndex":4,"stepResults":[{"result":{"nanos":162900,"millis":0.1629,"status":"passed"},"step":{"line":175,"prefix":"*","index":0,"text":"def myJson = { foo: 'bar', baz: [1, 2, 3]}"},"callResults":[{"failedCount":0,"prefixedPath":"classpath:utils.feature","packageQualifiedName":"utils","loopIndex":-1,"relativePath":"utils.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":121100,"millis":0.1211,"status":"passed"},"hidden":true,"step":{"line":5,"prefix":"*","index":0,"text":"def hello = function(){ return 'hello world' }"}}],"line":4,"description":"","durationMillis":0.1211,"failed":false,"tags":["report=false","ignore"],"executorName":"pool-1-thread-2","name":"","startTime":1668550327973,"refId":"[1:4]","endTime":1668550327973,"exampleIndex":-1}],"callDepth":1,"name":"","description":"","resultDate":"2022-11-15 07:12:09 PM","durationMillis":0.1211,"passedCount":1}]},{"result":{"nanos":3915000,"millis":3.915,"status":"passed"},"step":{"line":176,"prefix":"*","index":1,"text":"print 'pretty print:\\n' + karate.pretty(myJson)"},"stepLog":"19:12:07.978 [print] pretty print:\n{\n  \"foo\": \"bar\",\n  \"baz\": [\n    1,\n    2,\n    3\n  ]\n}\n \n"}],"executorName":"pool-1-thread-2","line":174,"name":"more pretty print","description":"","durationMillis":4.0779,"startTime":1668550327938,"failed":false,"refId":"[5:174]","endTime":1668550327978,"exampleIndex":-1},{"sectionIndex":5,"stepResults":[{"result":{"nanos":383400,"millis":0.3834,"status":"passed"},"step":{"line":179,"prefix":"*","index":0,"text":"def foo = 'hello1'"},"callResults":[{"failedCount":0,"prefixedPath":"classpath:utils.feature","packageQualifiedName":"utils","loopIndex":-1,"relativePath":"utils.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":78200,"millis":0.0782,"status":"passed"},"hidden":true,"step":{"line":5,"prefix":"*","index":0,"text":"def hello = function(){ return 'hello world' }"}}],"line":4,"description":"","durationMillis":0.0782,"failed":false,"tags":["report=false","ignore"],"executorName":"pool-1-thread-1","name":"","startTime":1668550327964,"refId":"[1:4]","endTime":1668550327964,"exampleIndex":-1}],"callDepth":1,"name":"","description":"","resultDate":"2022-11-15 07:12:09 PM","durationMillis":0.0782,"passedCount":1}]},{"result":{"nanos":334400,"millis":0.3344,"status":"passed"},"step":{"line":180,"prefix":"*","index":1,"text":"match foo == '#regex hello[0-9]+'"}},{"result":{"nanos":204100,"millis":0.2041,"status":"passed"},"step":{"line":181,"prefix":"*","index":2,"text":"match foo == '#regex .+[0-9]+'"}},{"result":{"nanos":103900,"millis":0.1039,"status":"passed"},"step":{"line":182,"prefix":"*","index":3,"text":"match foo contains 'hello'"}},{"result":{"nanos":4837200,"millis":4.8372,"status":"passed"},"step":{"line":183,"prefix":"*","index":4,"text":"assert foo.startsWith('hello')"}},{"result":{"nanos":606600,"millis":0.6066,"status":"passed"},"step":{"line":184,"prefix":"*","index":5,"text":"def isHello = function(s){ return s.startsWith('hello') && karate.match(s, '#regex .+[0-9]+').pass }"}},{"result":{"nanos":3863600,"millis":3.8636,"status":"passed"},"step":{"line":185,"prefix":"*","index":6,"text":"match foo == '#? isHello(_)'"}}],"executorName":"pool-1-thread-1","line":178,"name":"various ways of checking that a string ends with a number","description":"","durationMillis":10.3332,"startTime":1668550327939,"failed":false,"refId":"[6:178]","endTime":1668550327976,"exampleIndex":-1}],"callDepth":0,"name":"json-schema like validation","description":"","resultDate":"2022-11-15 07:12:09 PM","durationMillis":128.9228,"passedCount":6}