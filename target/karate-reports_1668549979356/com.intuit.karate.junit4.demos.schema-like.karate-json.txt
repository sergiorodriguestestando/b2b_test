{"failedCount":0,"prefixedPath":"classpath:com\/intuit\/karate\/junit4\/demos\/schema-like.feature","packageQualifiedName":"com.intuit.karate.junit4.demos.schema-like","loopIndex":-1,"relativePath":"com\/intuit\/karate\/junit4\/demos\/schema-like.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":1279200,"millis":1.2792,"status":"passed"},"step":{"line":5,"prefix":"*","index":0,"text":"def response = read('odds.json')"},"callResults":[{"failedCount":0,"prefixedPath":"classpath:utils.feature","packageQualifiedName":"utils","loopIndex":-1,"relativePath":"utils.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":80600,"millis":0.0806,"status":"passed"},"hidden":true,"step":{"line":5,"prefix":"*","index":0,"text":"def hello = function(){ return 'hello world' }"}}],"line":4,"description":"","durationMillis":0.0806,"failed":false,"tags":["report=false","ignore"],"executorName":"pool-1-thread-4","name":"","startTime":1668549935536,"refId":"[1:4]","endTime":1668549935536,"exampleIndex":-1}],"callDepth":1,"name":"","description":"","resultDate":"2022-11-15 07:05:36 PM","durationMillis":0.0806,"passedCount":1}]},{"result":{"nanos":648900,"millis":0.6489,"status":"passed"},"step":{"comments":["# here we enclose in round-brackets to preserve the optional embedded expression","# so that it can be used later in a \"match\""],"line":8,"prefix":"*","index":1,"text":"def oddSchema = ({ price: '#string', status: '#? _ < 3', ck: '##number', name: '#regex[0-9X]' })"}},{"result":{"nanos":8020700,"millis":8.0207,"status":"passed"},"step":{"line":9,"prefix":"*","index":2,"text":"def isValidTime = read('time-validator.js')"}},{"result":{"nanos":28448000,"millis":28.448,"status":"passed"},"step":{"endLine":27,"line":11,"prefix":"Then","docString":"{ \n  id: '#regex[0-9]+',\n  count: '#number',\n  odd: '#(oddSchema)',\n  data: { \n    countryId: '#number', \n    countryName: '#string', \n    leagueName: '##string', \n    status: '#number? _ >= 0', \n    sportName: '#string',\n    time: '#? isValidTime(_)'\n  },\n  odds: '#[] oddSchema'  \n}","index":3,"text":"match response =="}},{"result":{"nanos":498800,"millis":0.4988,"status":"passed"},"step":{"comments":["# other examples","# should be an array"],"line":31,"prefix":"*","index":4,"text":"match $.odds == '#[]'"}},{"result":{"nanos":939300,"millis":0.9393,"status":"passed"},"step":{"comments":["# should be an array of size 4"],"line":34,"prefix":"*","index":5,"text":"match $.odds == '#[4]'"}},{"result":{"nanos":723200,"millis":0.7232,"status":"passed"},"step":{"comments":["# optionally present (or null) and should be an array of size greater than zero"],"line":37,"prefix":"*","index":6,"text":"match $.odds == '##[_ > 0]'"}},{"result":{"nanos":560300,"millis":0.5603,"status":"passed"},"step":{"comments":["# should be an array of size equal to $.count"],"line":40,"prefix":"*","index":7,"text":"match $ contains { odds: '#[$.count]' }"}},{"result":{"nanos":361800,"millis":0.3618,"status":"passed"},"step":{"comments":["# use a predicate function to validate each array element"],"line":43,"prefix":"*","index":8,"text":"def isValidOdd = function(o){ return o.name.length == 1 }"}},{"result":{"nanos":54371200,"millis":54.3712,"status":"passed"},"step":{"line":44,"prefix":"*","index":9,"text":"match $.odds == '#[]? isValidOdd(_)'"}},{"result":{"nanos":104000,"millis":0.104,"status":"passed"},"step":{"comments":["# for simple arrays, types can be 'in-line'"],"line":47,"prefix":"*","index":10,"text":"def foo = ['bar', 'baz']"}},{"result":{"nanos":89400,"millis":0.0894,"status":"passed"},"step":{"comments":["# should be an array"],"line":50,"prefix":"*","index":11,"text":"match foo == '#[]'"}},{"result":{"nanos":1070900,"millis":1.0709,"status":"passed"},"step":{"comments":["# should be an array of size 2"],"line":53,"prefix":"*","index":12,"text":"match foo == '#[2]'"}},{"result":{"nanos":780600,"millis":0.7806,"status":"passed"},"step":{"comments":["# should be an array of strings with size 2"],"line":56,"prefix":"*","index":13,"text":"match foo == '#[2] #string'"}},{"result":{"nanos":1425800,"millis":1.4258,"status":"passed"},"step":{"comments":["# each item of the array should be of length 3"],"line":59,"prefix":"*","index":14,"text":"match foo == '#[]? _.length == 3'"}},{"result":{"nanos":989400,"millis":0.9894,"status":"passed"},"step":{"comments":["# should be an array of strings each of length 3"],"line":62,"prefix":"*","index":15,"text":"match foo == '#[] #string? _.length == 3'"}},{"result":{"nanos":551300,"millis":0.5513,"status":"passed"},"step":{"comments":["# should be null or an array of strings"],"line":65,"prefix":"*","index":16,"text":"match foo == '##[] #string'"}},{"result":{"nanos":493600,"millis":0.4936,"status":"passed"},"step":{"comments":["# each item of the array should match regex (with backslash involved)"],"line":68,"prefix":"*","index":17,"text":"match foo == '#[] #regex \\\\w+'"}},{"result":{"nanos":121400,"millis":0.1214,"status":"passed"},"step":{"comments":["# contains"],"line":71,"prefix":"*","index":18,"text":"def actual = [{ a: 1, b: 'x' }, { a: 2, b: 'y' }]"}},{"result":{"nanos":47400,"millis":0.0474,"status":"passed"},"step":{"line":73,"prefix":"*","index":19,"text":"def schema = { a: '#number', b: '#string' }"}},{"result":{"nanos":39600,"millis":0.0396,"status":"passed"},"step":{"line":74,"prefix":"*","index":20,"text":"def partSchema = { a: '#number' }"}},{"result":{"nanos":30400,"millis":0.0304,"status":"passed"},"step":{"line":75,"prefix":"*","index":21,"text":"def badSchema = { c: '#boolean' }"}},{"result":{"nanos":32600,"millis":0.0326,"status":"passed"},"step":{"line":76,"prefix":"*","index":22,"text":"def mixSchema = { a: '#number', c: '#boolean' }"}},{"result":{"nanos":43200,"millis":0.0432,"status":"passed"},"step":{"line":78,"prefix":"*","index":23,"text":"def shuffled = [{ a: 2, b: 'y' }, { b: 'x', a: 1 }]"}},{"result":{"nanos":38200,"millis":0.0382,"status":"passed"},"step":{"line":79,"prefix":"*","index":24,"text":"def first = { a: 1, b: 'x' }"}},{"result":{"nanos":35500,"millis":0.0355,"status":"passed"},"step":{"line":80,"prefix":"*","index":25,"text":"def part = { a: 1 }"}},{"result":{"nanos":37600,"millis":0.0376,"status":"passed"},"step":{"line":81,"prefix":"*","index":26,"text":"def mix = { b: 'y', c: true }"}},{"result":{"nanos":43900,"millis":0.0439,"status":"passed"},"step":{"line":82,"prefix":"*","index":27,"text":"def other = [{ a: 3, b: 'u' }, { a: 4, b: 'v' }]"}},{"result":{"nanos":47200,"millis":0.0472,"status":"passed"},"step":{"line":83,"prefix":"*","index":28,"text":"def some = [{ a: 1, b: 'x' }, { a: 5, b: 'w' }]"}},{"result":{"nanos":168800,"millis":0.1688,"status":"passed"},"step":{"line":85,"prefix":"*","index":29,"text":"match actual[0] == schema"}},{"result":{"nanos":647000,"millis":0.647,"status":"passed"},"step":{"line":86,"prefix":"*","index":30,"text":"match actual[0] == '#(schema)'"}},{"result":{"nanos":127400,"millis":0.1274,"status":"passed"},"step":{"line":88,"prefix":"*","index":31,"text":"match actual[0] contains partSchema"}},{"result":{"nanos":596600,"millis":0.5966,"status":"passed"},"step":{"line":89,"prefix":"*","index":32,"text":"match actual[0] == '#(^partSchema)'"}},{"result":{"nanos":135400,"millis":0.1354,"status":"passed"},"step":{"line":91,"prefix":"*","index":33,"text":"match actual[0] contains any mixSchema"}},{"result":{"nanos":570000,"millis":0.57,"status":"passed"},"step":{"line":92,"prefix":"*","index":34,"text":"match actual[0] == '#(^*mixSchema)'"}},{"result":{"nanos":101500,"millis":0.1015,"status":"passed"},"step":{"line":94,"prefix":"*","index":35,"text":"match actual[0] !contains badSchema"}},{"result":{"nanos":455300,"millis":0.4553,"status":"passed"},"step":{"line":95,"prefix":"*","index":36,"text":"match actual[0] == '#(!^badSchema)'"}},{"result":{"nanos":324300,"millis":0.3243,"status":"passed"},"step":{"line":97,"prefix":"*","index":37,"text":"match each actual == schema"}},{"result":{"nanos":539000,"millis":0.539,"status":"passed"},"step":{"line":98,"prefix":"*","index":38,"text":"match actual == '#[] schema'"}},{"result":{"nanos":281000,"millis":0.281,"status":"passed"},"step":{"line":100,"prefix":"*","index":39,"text":"match each actual contains partSchema"}},{"result":{"nanos":587300,"millis":0.5873,"status":"passed"},"step":{"line":101,"prefix":"*","index":40,"text":"match actual == '#[] ^partSchema'"}},{"result":{"nanos":291700,"millis":0.2917,"status":"passed"},"step":{"line":103,"prefix":"*","index":41,"text":"match each actual contains any mixSchema"}},{"result":{"nanos":786200,"millis":0.7862,"status":"passed"},"step":{"line":104,"prefix":"*","index":42,"text":"match actual == '#[] ^*mixSchema'"}},{"result":{"nanos":319700,"millis":0.3197,"status":"passed"},"step":{"line":106,"prefix":"*","index":43,"text":"match each actual !contains badSchema"}},{"result":{"nanos":723500,"millis":0.7235,"status":"passed"},"step":{"line":107,"prefix":"*","index":44,"text":"match actual == '#[] !^badSchema'"}},{"result":{"nanos":138700,"millis":0.1387,"status":"passed"},"step":{"line":109,"prefix":"*","index":45,"text":"match actual contains only shuffled"}},{"result":{"nanos":774100,"millis":0.7741,"status":"passed"},"step":{"line":110,"prefix":"*","index":46,"text":"match actual == '#(^^shuffled)'"}},{"result":{"nanos":73200,"millis":0.0732,"status":"passed"},"step":{"line":112,"prefix":"*","index":47,"text":"match actual contains first"}},{"result":{"nanos":471800,"millis":0.4718,"status":"passed"},"step":{"line":113,"prefix":"*","index":48,"text":"match actual == '#(^first)'"}},{"result":{"nanos":78900,"millis":0.0789,"status":"passed"},"step":{"line":115,"prefix":"*","index":49,"text":"match actual contains any some"}},{"result":{"nanos":665100,"millis":0.6651,"status":"passed"},"step":{"line":116,"prefix":"*","index":50,"text":"match actual == '#(^*some)'"}},{"result":{"nanos":129800,"millis":0.1298,"status":"passed"},"step":{"line":118,"prefix":"*","index":51,"text":"match actual !contains other"}},{"result":{"nanos":926000,"millis":0.926,"status":"passed"},"step":{"line":119,"prefix":"*","index":52,"text":"match actual == '#(!^other)'"}},{"result":{"nanos":125100,"millis":0.1251,"status":"passed"},"step":{"line":121,"prefix":"*","index":53,"text":"match actual contains deep part"}},{"result":{"nanos":632700,"millis":0.6327,"status":"passed"},"step":{"line":122,"prefix":"*","index":54,"text":"match actual == '#(^+part)'"}},{"result":{"nanos":518400,"millis":0.5184,"status":"passed"},"step":{"comments":["# no in-line equivalent !"],"line":125,"prefix":"*","index":55,"text":"match actual contains '#(^part)'"}},{"result":{"nanos":485000,"millis":0.485,"status":"passed"},"step":{"comments":["# no in-line equivalent !"],"line":128,"prefix":"*","index":56,"text":"match actual contains '#(^*mix)'"}},{"result":{"nanos":285400,"millis":0.2854,"status":"passed"},"step":{"line":130,"prefix":"*","index":57,"text":"assert actual.length == 2"}},{"result":{"nanos":398200,"millis":0.3982,"status":"passed"},"step":{"line":131,"prefix":"*","index":58,"text":"match actual == '#[2]'"}},{"result":{"nanos":150500,"millis":0.1505,"status":"passed"},"step":{"comments":["# contains deep"],"line":134,"prefix":"*","index":59,"text":"def actualDeep = [{ a: [1, 2], b: 'x' }, { a: [3, 4], b: 'y' }]"}},{"result":{"nanos":47300,"millis":0.0473,"status":"passed"},"step":{"line":136,"prefix":"*","index":60,"text":"def partDeep = { a: [1] }"}},{"result":{"nanos":146100,"millis":0.1461,"status":"passed"},"step":{"line":137,"prefix":"*","index":61,"text":"match actual contains deep part"}}],"executorName":"pool-1-thread-4","line":3,"name":"but simpler and more powerful","description":"","durationMillis":114.5744,"startTime":1668549935515,"failed":false,"refId":"[1:3]","endTime":1668549935653,"exampleIndex":-1},{"sectionIndex":1,"stepResults":[{"result":{"nanos":157800,"millis":0.1578,"status":"passed"},"step":{"endLine":152,"line":140,"prefix":"*","docString":"{\n  \"foo\": {\n    \"bars\": [\n      { \"barOne\": \"dc\", \"barTwos\": [] },\n      { \"barOne\": \"dc\", \"barTwos\": [{ title: 'blah' }] },\n      { \"barOne\": \"dc\", \"barTwos\": [{ title: 'blah' }], barThrees: [] },\n      { \"barOne\": \"dc\", \"barTwos\": [{ title: 'blah' }], barThrees: [{ num: 1 }] }\n    ]\n  }\n}","index":0,"text":"def json ="},"callResults":[{"failedCount":0,"prefixedPath":"classpath:utils.feature","packageQualifiedName":"utils","loopIndex":-1,"relativePath":"utils.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":78700,"millis":0.0787,"status":"passed"},"hidden":true,"step":{"line":5,"prefix":"*","index":0,"text":"def hello = function(){ return 'hello world' }"}}],"line":4,"description":"","durationMillis":0.0787,"failed":false,"tags":["report=false","ignore"],"executorName":"pool-1-thread-1","name":"","startTime":1668549935530,"refId":"[1:4]","endTime":1668549935530,"exampleIndex":-1}],"callDepth":1,"name":"","description":"","resultDate":"2022-11-15 07:05:36 PM","durationMillis":0.0787,"passedCount":1}]},{"result":{"nanos":104600,"millis":0.1046,"status":"passed"},"step":{"line":153,"prefix":"*","index":1,"text":"def barTwo = { title: '#string' }"}},{"result":{"nanos":58200,"millis":0.0582,"status":"passed"},"step":{"line":154,"prefix":"*","index":2,"text":"def barThree = { num: '#number' }"}},{"result":{"nanos":37500,"millis":0.0375,"status":"passed"},"step":{"line":155,"prefix":"*","index":3,"text":"def bar = { barOne: '#string', barTwos: '#[] barTwo', barThrees: '##[] barThree' }"}},{"result":{"nanos":2522400,"millis":2.5224,"status":"passed"},"step":{"line":156,"prefix":"*","index":4,"text":"match json.foo.bars == '#[] bar'"}}],"executorName":"pool-1-thread-1","line":139,"name":"complex nested arrays","description":"","durationMillis":2.8805,"startTime":1668549935525,"failed":false,"refId":"[2:139]","endTime":1668549935534,"exampleIndex":-1},{"sectionIndex":2,"stepResults":[{"result":{"nanos":117500,"millis":0.1175,"status":"passed"},"step":{"line":159,"prefix":"*","index":0,"text":"def dogSchema = { id: '#string', color: '#string' }"},"callResults":[{"failedCount":0,"prefixedPath":"classpath:utils.feature","packageQualifiedName":"utils","loopIndex":-1,"relativePath":"utils.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":106300,"millis":0.1063,"status":"passed"},"hidden":true,"step":{"line":5,"prefix":"*","index":0,"text":"def hello = function(){ return 'hello world' }"}}],"line":4,"description":"","durationMillis":0.1063,"failed":false,"tags":["report=false","ignore"],"executorName":"pool-1-thread-3","name":"","startTime":1668549935561,"refId":"[1:4]","endTime":1668549935561,"exampleIndex":-1}],"callDepth":1,"name":"","description":"","resultDate":"2022-11-15 07:05:36 PM","durationMillis":0.1063,"passedCount":1}]},{"result":{"nanos":566900,"millis":0.5669,"status":"passed"},"step":{"comments":["# here we enclose in round-brackets to preserve the optional embedded expression","# so that it can be used later in a \"match\""],"line":162,"prefix":"*","index":1,"text":"def schema = ({ id: '#string', name: '#string', dog: '##(dogSchema)' })"}},{"result":{"nanos":78100,"millis":0.0781,"status":"passed"},"step":{"line":164,"prefix":"*","index":2,"text":"def response1 = { id: '123', name: 'foo' }"}},{"result":{"nanos":132400,"millis":0.1324,"status":"passed"},"step":{"line":165,"prefix":"*","index":3,"text":"match response1 == schema"}},{"result":{"nanos":65500,"millis":0.0655,"status":"passed"},"step":{"line":167,"prefix":"*","index":4,"text":"def response2 = { id: '123', name: 'foo', dog: { id: '456', color: 'brown' } }"}},{"result":{"nanos":781900,"millis":0.7819,"status":"passed"},"step":{"line":168,"prefix":"*","index":5,"text":"match response2 == schema"}}],"executorName":"pool-1-thread-3","line":158,"name":"re-usable json chunks as nodes, but optional","description":"","durationMillis":1.7423,"startTime":1668549935529,"failed":false,"refId":"[3:158]","endTime":1668549935564,"exampleIndex":-1},{"sectionIndex":3,"stepResults":[{"result":{"nanos":625300,"millis":0.6253,"status":"passed"},"step":{"line":171,"prefix":"*","index":0,"text":"def json = read('odds.json')"},"callResults":[{"failedCount":0,"prefixedPath":"classpath:utils.feature","packageQualifiedName":"utils","loopIndex":-1,"relativePath":"utils.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":55300,"millis":0.0553,"status":"passed"},"hidden":true,"step":{"line":5,"prefix":"*","index":0,"text":"def hello = function(){ return 'hello world' }"}}],"line":4,"description":"","durationMillis":0.0553,"failed":false,"tags":["report=false","ignore"],"executorName":"pool-1-thread-1","name":"","startTime":1668549935546,"refId":"[1:4]","endTime":1668549935546,"exampleIndex":-1}],"callDepth":1,"name":"","description":"","resultDate":"2022-11-15 07:05:36 PM","durationMillis":0.0553,"passedCount":1}]},{"result":{"nanos":1993200,"millis":1.9932,"status":"passed"},"step":{"line":172,"prefix":"*","index":1,"text":"print 'pretty print:\\n' + karate.pretty(json)"},"stepLog":"19:05:35.549 [print] pretty print:\n{\n  \"id\": \"390\",\n  \"count\": 4,\n  \"odd\": {\n    \"price\": \"1.20\",\n    \"status\": 2,\n    \"ck\": 12.2,\n    \"name\": \"2\"\n  },\n  \"data\": {\n    \"countryId\": 35,\n    \"countryName\": \"Norway\",\n    \"status\": 0,\n    \"sportName\": \"Soccer\",\n    \"time\": \"2016-06-12T12:00:00Z\"\n  },\n  \"odds\": [\n    {\n      \"price\": \"1.30\",\n      \"status\": 0,\n      \"ck\": 12.2,\n      \"name\": \"1\"\n    },\n    {\n      \"price\": \"5.25\",\n      \"status\": 1,\n      \"name\": \"X\"\n    },\n    {\n      \"price\": \"2.70\",\n      \"status\": 0,\n      \"ck\": 12.2,\n      \"name\": \"0\"\n    },\n    {\n      \"price\": \"1.20\",\n      \"status\": 2,\n      \"name\": \"2\"\n    }\n  ]\n}\n \n"}],"executorName":"pool-1-thread-1","line":170,"name":"pretty print json","description":"","durationMillis":2.6185,"startTime":1668549935536,"failed":false,"refId":"[4:170]","endTime":1668549935549,"exampleIndex":-1},{"sectionIndex":4,"stepResults":[{"result":{"nanos":153800,"millis":0.1538,"status":"passed"},"step":{"line":175,"prefix":"*","index":0,"text":"def myJson = { foo: 'bar', baz: [1, 2, 3]}"},"callResults":[{"failedCount":0,"prefixedPath":"classpath:utils.feature","packageQualifiedName":"utils","loopIndex":-1,"relativePath":"utils.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":83700,"millis":0.0837,"status":"passed"},"hidden":true,"step":{"line":5,"prefix":"*","index":0,"text":"def hello = function(){ return 'hello world' }"}}],"line":4,"description":"","durationMillis":0.0837,"failed":false,"tags":["report=false","ignore"],"executorName":"pool-1-thread-5","name":"","startTime":1668549935540,"refId":"[1:4]","endTime":1668549935540,"exampleIndex":-1}],"callDepth":1,"name":"","description":"","resultDate":"2022-11-15 07:05:36 PM","durationMillis":0.0837,"passedCount":1}]},{"result":{"nanos":1416100,"millis":1.4161,"status":"passed"},"step":{"line":176,"prefix":"*","index":1,"text":"print 'pretty print:\\n' + karate.pretty(myJson)"},"stepLog":"19:05:35.544 [print] pretty print:\n{\n  \"foo\": \"bar\",\n  \"baz\": [\n    1,\n    2,\n    3\n  ]\n}\n \n"}],"executorName":"pool-1-thread-5","line":174,"name":"more pretty print","description":"","durationMillis":1.5699,"startTime":1668549935536,"failed":false,"refId":"[5:174]","endTime":1668549935544,"exampleIndex":-1},{"sectionIndex":5,"stepResults":[{"result":{"nanos":344500,"millis":0.3445,"status":"passed"},"step":{"line":179,"prefix":"*","index":0,"text":"def foo = 'hello1'"},"callResults":[{"failedCount":0,"prefixedPath":"classpath:utils.feature","packageQualifiedName":"utils","loopIndex":-1,"relativePath":"utils.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":90300,"millis":0.0903,"status":"passed"},"hidden":true,"step":{"line":5,"prefix":"*","index":0,"text":"def hello = function(){ return 'hello world' }"}}],"line":4,"description":"","durationMillis":0.0903,"failed":false,"tags":["report=false","ignore"],"executorName":"pool-1-thread-5","name":"","startTime":1668549935556,"refId":"[1:4]","endTime":1668549935556,"exampleIndex":-1}],"callDepth":1,"name":"","description":"","resultDate":"2022-11-15 07:05:36 PM","durationMillis":0.0903,"passedCount":1}]},{"result":{"nanos":349800,"millis":0.3498,"status":"passed"},"step":{"line":180,"prefix":"*","index":1,"text":"match foo == '#regex hello[0-9]+'"}},{"result":{"nanos":270100,"millis":0.2701,"status":"passed"},"step":{"line":181,"prefix":"*","index":2,"text":"match foo == '#regex .+[0-9]+'"}},{"result":{"nanos":174300,"millis":0.1743,"status":"passed"},"step":{"line":182,"prefix":"*","index":3,"text":"match foo contains 'hello'"}},{"result":{"nanos":6663500,"millis":6.6635,"status":"passed"},"step":{"line":183,"prefix":"*","index":4,"text":"assert foo.startsWith('hello')"}},{"result":{"nanos":829500,"millis":0.8295,"status":"passed"},"step":{"line":184,"prefix":"*","index":5,"text":"def isHello = function(s){ return s.startsWith('hello') && karate.match(s, '#regex .+[0-9]+').pass }"}},{"result":{"nanos":14776500,"millis":14.7765,"status":"passed"},"step":{"line":185,"prefix":"*","index":6,"text":"match foo == '#? isHello(_)'"}}],"executorName":"pool-1-thread-5","line":178,"name":"various ways of checking that a string ends with a number","description":"","durationMillis":23.4082,"startTime":1668549935546,"failed":false,"refId":"[6:178]","endTime":1668549935581,"exampleIndex":-1}],"callDepth":0,"name":"json-schema like validation","description":"","resultDate":"2022-11-15 07:05:36 PM","durationMillis":146.7938,"passedCount":6}